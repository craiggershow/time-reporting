// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id         String      @id @default(uuid())
  email      String      @unique
  password   String
  firstName  String
  lastName   String
  role       UserRole    @default(EMPLOYEE)
  timesheets Timesheet[]
  notifications Notification[]
  createdAt  DateTime    @default(now())
  updatedAt  DateTime    @updatedAt
}

model Timesheet {
  id            String          @id @default(uuid())
  userId        String
  payPeriodId   String
  status        TimesheetStatus @default(DRAFT)
  weeks         Week[]
  vacationHours Float           @default(0)
  submittedAt   DateTime?
  user          User            @relation(fields: [userId], references: [id])
  payPeriod     PayPeriod       @relation(fields: [payPeriodId], references: [id])
  notifications Notification[]
  createdAt     DateTime        @default(now())
  updatedAt     DateTime        @updatedAt

  @@unique([userId, payPeriodId])
}

model PayPeriod {
  id         String      @id @default(uuid())
  startDate  DateTime
  endDate    DateTime
  timesheets Timesheet[]
  createdAt  DateTime    @default(now())
  updatedAt  DateTime    @updatedAt

  @@unique([startDate, endDate])
}

model Week {
  id          String    @id @default(uuid())
  weekNumber  Int
  timesheetId String
  timesheet   Timesheet @relation(fields: [timesheetId], references: [id])
  days        Day[]
  extraHours  Float     @default(0)
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt

  @@unique([timesheetId, weekNumber])
}

model Day {
  id              String      @id @default(uuid())
  weekId          String
  dayOfWeek       DayOfWeek
  dayType         DayType     @default(REGULAR)
  // Time fields as strings
  startTime       String      @default("00:00")
  endTime         String      @default("00:00")
  lunchStartTime  String      @default("00:00")
  lunchEndTime    String      @default("00:00")
  totalHours      Float       @default(0)
  week            Week        @relation(fields: [weekId], references: [id])
  createdAt       DateTime    @default(now())
  updatedAt       DateTime    @updatedAt

  @@unique([weekId, dayOfWeek])
}

model Notification {
  id          String    @id @default(cuid())
  createdAt   DateTime  @default(now())
  userId      String
  timesheetId String
  type        String
  read        Boolean   @default(false)
  user        User      @relation(fields: [userId], references: [id])
  timesheet   Timesheet @relation(fields: [timesheetId], references: [id])

  @@index([userId])
  @@index([timesheetId])
}

enum UserRole {
  ADMIN
  EMPLOYEE
}

enum TimesheetStatus {
  DRAFT
  SUBMITTED
  APPROVED
  REJECTED
}

enum DayType {
  REGULAR
  VACATION
  SICK
  HOLIDAY
}

enum DayOfWeek {
  MONDAY
  TUESDAY
  WEDNESDAY
  THURSDAY
  FRIDAY
}
