datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model User {
  id              String      @id @default(uuid())
  email           String      @unique
  password        String      // Hashed
  firstName       String
  lastName        String
  role            UserRole    @default(EMPLOYEE)
  timesheets      Timesheet[]
  createdAt       DateTime    @default(now())
  updatedAt       DateTime    @updatedAt
}

enum UserRole {
  ADMIN
  EMPLOYEE
}

model PayPeriod {
  id              String      @id @default(uuid())
  startDate       DateTime
  endDate         DateTime
  timesheets      Timesheet[]
  createdAt       DateTime    @default(now())
  updatedAt       DateTime    @updatedAt

  @@unique([startDate])
}

model Timesheet {
  id              String      @id @default(uuid())
  userId          String
  payPeriodId     String
  status          TimesheetStatus
  vacationHours   Float       @default(0)
  week1           Week[]      @relation("Week1")
  week2           Week[]      @relation("Week2")
  submittedAt     DateTime?
  user            User        @relation(fields: [userId], references: [id])
  payPeriod       PayPeriod   @relation(fields: [payPeriodId], references: [id])
  createdAt       DateTime    @default(now())
  updatedAt       DateTime    @updatedAt

  @@unique([userId, payPeriodId])
}

enum TimesheetStatus {
  DRAFT
  SUBMITTED
  APPROVED
  REJECTED
}

model Week {
  id              String      @id @default(uuid())
  timesheetId     String
  weekNumber      Int         // 1 or 2
  extraHours      Float       @default(0)
  days            Day[]
  timesheet       Timesheet   @relation(fields: [timesheetId], references: [id])
  createdAt       DateTime    @default(now())
  updatedAt       DateTime    @updatedAt

  @@unique([timesheetId, weekNumber])
}

model Day {
  id              String      @id @default(uuid())
  weekId          String
  dayOfWeek       DayOfWeek
  dayType         DayType     @default(REGULAR)
  startTime       String?
  endTime         String?
  lunchStartTime  String?
  lunchEndTime    String?
  totalHours      Float       @default(0)
  week            Week        @relation(fields: [weekId], references: [id])
  createdAt       DateTime    @default(now())
  updatedAt       DateTime    @updatedAt

  @@unique([weekId, dayOfWeek])
}

enum DayOfWeek {
  MONDAY
  TUESDAY
  WEDNESDAY
  THURSDAY
  FRIDAY
}

enum DayType {
  REGULAR
  VACATION
  SICK
  HOLIDAY
}

model CompanySettings {
  id              String    @id @default(uuid())
  name            String
  logoUrl         String?
  updatedAt       DateTime  @updatedAt
} 